$date
	Mon Jan 27 10:18:46 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RegisterFile_tb $end
$var wire 32 ! readData2 [31:0] $end
$var wire 32 " readData1 [31:0] $end
$var reg 5 # addr1 [4:0] $end
$var reg 5 $ addr2 [4:0] $end
$var reg 1 % clk $end
$var reg 1 & rst $end
$var reg 5 ' writeAddr [4:0] $end
$var reg 32 ( writeData [31:0] $end
$var reg 1 ) writeEnable $end
$scope module dut $end
$var wire 5 * addr1 [4:0] $end
$var wire 5 + addr2 [4:0] $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var wire 5 , writeAddr [4:0] $end
$var wire 32 - writeData [31:0] $end
$var wire 1 ) writeEnable $end
$var wire 32 . readData2 [31:0] $end
$var wire 32 / readData1 [31:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 0
b0 /
b0 .
bx -
bx ,
bx +
bx *
x)
bx (
bx '
0&
0%
bx $
bx #
b0 "
b0 !
$end
#5
1%
#10
0%
#15
1%
#20
b100 "
b100 /
b1100 !
b1100 .
0%
0)
b10001100010010001100010011 (
b10001100010010001100010011 -
b1 '
b1 ,
b1100 $
b1100 +
b100 #
b100 *
1&
#25
1%
#30
0%
1)
#35
1%
#40
b10001100010010001100010011 "
b10001100010010001100010011 /
0%
b1 #
b1 *
#45
1%
#50
0%
#55
1%
#60
0%
